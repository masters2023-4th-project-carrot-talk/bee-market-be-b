plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}


group = 'com.carrot'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // aws s3
    implementation 'io.awspring.cloud:spring-cloud-aws-starter:3.0.2'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.2'

    // marvin image resize
    implementation 'com.github.downgoon:marvin:1.5.5'
    implementation 'com.github.downgoon:MarvinPlugins:1.5.5'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // Http Interface
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'

    //mysql 연동
    implementation 'mysql:mysql-connector-java:8.0.32'


    // FOR @ConfigurationProperties
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Cache
    implementation("org.springframework.boot:spring-boot-starter-cache")

    annotationProcessor 'org.projectlombok:lombok'

    // awaitility
    testImplementation 'org.awaitility:awaitility:4.2.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// FOR @ConfigurationProperties
tasks.named('compileJava') {
    inputs.files(tasks.named('processResources'))
}
/**
 * QueryDSL Build Options
 */
def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}